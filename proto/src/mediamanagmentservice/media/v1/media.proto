syntax = "proto3";

package media.v1;

import "google/api/annotations.proto";

option go_package = "mediamanagmentservice/media/v1;v1";

// The Media service definition.
service Media {
  rpc GetObject (GetObjectRequest) returns (GetObjectReply) {
    option (google.api.http) = {
      get: "/v1/media/object/{object_type}/{file_name}"
    };
  };

  rpc GetObjectDownloadURL (GetObjectDownloadURLRequest) returns (GetObjectDownloadURLReply) {
    option (google.api.http) = {
      get: "/v1/media/download/{object_type}/{file_name}"
    };
  };

  rpc GetObjectUploadURL (GetObjectUploadURLRequest) returns (GetObjectUploadURLReply) {
    option (google.api.http) = {
      get: "/v1/media/upload/{object_type}/{file_name}"
    };
  };

  rpc UploadObject (UploadObjectRequest) returns (UploadObjectReply) {
    option (google.api.http) = {
      post: "/v1/media/upload"
      body: "*"
    };
  };

  rpc DeleteObject (DeleteObjectRequest) returns (DeleteObjectReply) {
    option (google.api.http) = {
      delete: "/v1/media/object/{object_type}/{file_name}",
    };
  };
}

message DeleteObjectReply {

}

message DeleteObjectRequest {
  string object_type = 1 [json_name = "object_type"];
  string file_name = 2 [json_name = "file_name"];
}

message GetObjectRequest {
  string object_type = 1;
  string file_name = 2;
}

message GetObjectReply {
  string base64 = 1;
}

message GetObjectDownloadURLRequest {
  string object_type = 1;
  string file_name = 2;
}

message GetObjectDownloadURLReply {
  string url = 1;
  string object_type = 2 [json_name = "object_type"];
  string file_name = 3 [json_name = "file_name"];
}

message GetObjectUploadURLRequest {
  string object_type = 1;
  string file_name = 2;
}

message GetObjectUploadURLReply {
  string url = 1;
}

message UploadObjectRequest {
  string file_name = 1;
  string object_type = 2;
  string base64 = 3;
}

message UploadObjectReply {
  string key = 1;
  string object_type = 2;
  string file_name = 3;
}
