syntax = "proto3";

package api.configurationservice.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";

option go_package = "configurationservice/features/v1;v1";

service Features {
  rpc ListFeatures (ListFeaturesRequest) returns (ListFeaturesReply) {
    option (google.api.http) = {
      get: "/v1/features"
    };
  };

  rpc SaveFeatures (SaveFeaturesRequest) returns (SaveFeaturesReply) {
    option (google.api.http) = {
      post: "/v1/features",
      body: "*"
    };
  };

  rpc IsFeatureEnabled(IsFeatureEnabledRequest) returns (IsFeatureEnabledReply) {
    option (google.api.http) = {
      get: "/v1/features/{key}"
    };
  }
}

message ListFeaturesRequest {
  string tenant_id = 1 [json_name = "tenant_id"];
}

message ListFeaturesReply {
  repeated Feature features = 1 [json_name = "features"];
  string tenant_id = 2 [json_name = "tenant_id"];

  message Feature {
    optional string id = 1 [json_name = "id"];
    string feature_id = 2 [json_name = "feature_id"];
    bool feature_value = 3 [json_name = "feature_value"];
    string name = 4 [json_name = "name"];
    string key = 5 [json_name = "key"];
  }
}

message SaveFeaturesRequest {
  repeated SaveFeature features = 1 [json_name = "features"];
  string tenant_id = 2 [json_name = "tenant_id"];
  Configs configs = 3 [json_name = "configs"];

  message SaveFeature {
    string feature_id = 1 [(google.api.field_behavior) = REQUIRED, json_name = "feature_id"];
    bool feature_value = 2 [(google.api.field_behavior) = REQUIRED, json_name = "feature_value"];
  }

  message Configs {
    EvWiFi evwifi = 1 [json_name = "evwifi"];
    Donats donats = 2 [json_name = "donats"];
  }

  message EvWiFi {
    string ssid = 1 [json_name = "ssid"];
    string password = 2 [json_name = "password"];
  }

  message Donats {
    string status = 1 [json_name = "status"];
    google.protobuf.Timestamp start_time = 2 [json_name = "start_time"];
    google.protobuf.Timestamp end_time = 3 [json_name = "end_time"];
    string time_zone = 4 [json_name = "time_zone"];
    string leaderboard_status = 5 [json_name = "leaderboard_status"];
  }
}

message SaveFeaturesReply {
  repeated SaveFeature features = 1 [json_name = "features"];
  string tenant_id = 2 [json_name = "tenant_id"];

  message SaveFeature {
    string id = 1 [json_name = "id"];
    string feature_id = 2 [json_name = "feature_id"];
    bool feature_value = 3 [json_name = "feature_value"];
    string name = 4 [json_name = "name"];
    string key = 5 [json_name = "key"];
  }
}

message IsFeatureEnabledRequest {
  string key = 1 [(google.api.field_behavior) = REQUIRED, json_name = "key"];
}

message IsFeatureEnabledReply {
  bool is_enabled = 1 [json_name = "is_enabled"];
}
