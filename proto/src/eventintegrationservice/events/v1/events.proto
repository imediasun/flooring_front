syntax = "proto3";

package events.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "eventintegrationservice/events/v1;v1";

// The Events service definition.
service Events {
  rpc PostEvent (PostEventRequest) returns (PostEventReply) {
    option (google.api.http) = {
			post: "/v1/event",
      body: "*"
    };
  };
}

message PostEventRequest {
  int32 sourceid =1 [(google.api.field_behavior) = REQUIRED,(validate.rules).int32 = {gte: 1, lte: 11  }];
  Payload payload =2 [(google.api.field_behavior) = REQUIRED];
}


message Payload {
  string event_type = 1 [(google.api.field_behavior) = REQUIRED,json_name = "event"]; 
  Context context = 2 [(google.api.field_behavior) = REQUIRED];
  Object object = 3;
}

message Context{
  google.protobuf.Timestamp timestamp = 1 [(google.api.field_behavior) = REQUIRED,json_name = "timestamp"];
  LocationInfo location  = 2;
  string session_id = 3[(google.api.field_behavior) = REQUIRED,json_name = "sessionId"] ;
  optional string journey_id = 4 [json_name = "journeyId"];
  string space_id = 5[(google.api.field_behavior) = REQUIRED,json_name = "spaceId"];
  string org_id = 6 [(google.api.field_behavior) = REQUIRED ,json_name = "orgId"];
  Idp  idp = 7 [(google.api.field_behavior) = REQUIRED];
}

message Idp {
  string idp_id = 1 [(google.api.field_behavior) = REQUIRED,json_name = "idpId"];
  string user_id = 2[(google.api.field_behavior) = REQUIRED,json_name = "userId"];
}

message LocationInfo  {
  double lat = 1;
  double lng = 2;
}


message Object {
  string id = 1;
  string type = 2;
  string question_id = 3 [json_name = "questionId"];
  string selected_option_id = 4 [json_name = "selectedOptionId"];
  string assigned_id =5 [json_name = "assignedId"];
  bool revealed = 6 [json_name = "revealed"];
  bool claimed = 7 [json_name = "claimed"];
  string fab_id = 8 [json_name = "fabId"];
}

message PostEventReply {
  
}

